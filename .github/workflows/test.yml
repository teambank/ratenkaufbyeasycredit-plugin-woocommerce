name: Test

on:
  push:
    branches:
    - '*'

jobs:
  ci-current:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        include:
#          - php-version: 7.4
#            wordpress-version: "5.6.10"
#            woocommerce-version: "5.6.2"
#          - php-version: 8.0
#            wordpress-version: "5.9.5"
#            woocommerce-version: "6.9.4"
#          - php-version: 8.1
#            wordpress-version: "6.1"
#            woocommerce-version: "7.4.1"
          - php-version: 8.2
            wordpress-version: "6.2"
            woocommerce-version: "7.6.0"

    name: Wordpress v${{ matrix.wordpress-version }} & wooCommerce v${{ matrix.woocommerce-version }} @ ${{ matrix.php-version }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: wordpress
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      WORDPRESS_DIR: /opt/wordpress
      PLUGIN_DIR: /opt/wordpress/wp-content/plugins/wc-easycredit
      WORDPRESS_DB_HOST: 127.0.0.1
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: true
      WP_CLI_ALLOW_ROOT: true
 
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, curl, dom, fileinfo, gd, iconv, intl, json, xml, mbstring, pdo, phar, zip, sodium
          tools: composer:2.1.5
          coverage: none
      - name: Debug
        run: |
          php -v
          env
      - name: Install Wordpress & wooCommerce
        run: | 
          curl -L "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar" > /usr/local/bin/wp && chmod +x /usr/local/bin/wp
          mkdir -p $WORDPRESS_DIR && cd $WORDPRESS_DIR
          wp core download --version=${{ matrix.wordpress-version }} --locale=de_DE
          wp config create --dbhost=$WORDPRESS_DB_HOST --dbname=$WORDPRESS_DB_NAME --dbuser=$WORDPRESS_DB_USER --dbpass=$WORDPRESS_DB_PASSWORD --locale=de_DE \
           --extra-php="define('WP_DEBUG',true); define('WP_DEBUG_LOG',true); define('WP_DEBUG_DISPLAY',true); error_reporting(E_ALL & ~E_NOTICE & ~E_DEPRECATED);"

          wp core install --url=localhost --title=Example --admin_user=admin --admin_password=password --admin_email=info@example.com
          wp plugin install woocommerce --version=${{ matrix.woocommerce-version }} --activate

          wp option pluck woocommerce_onboarding_profile skipped
          wp option update woocommerce_show_marketplace_suggestions 'no'
          wp option update woocommerce_allow_tracking 'no'
          wp option update woocommerce_task_list_complete 'yes'
          wp option update woocommerce_task_list_welcome_modal_dismissed 'yes'
          wp option update woocommerce_default_country 'DE:DE-BY'
          wp option update woocommerce_currency 'EUR'

          wp wc product create --name=Test --slug=Test --type=simple --status=1 --sku=test --regular_price=201 --status=publish --user=admin

      - name:  Install easyCredit Plugin
        run: |
          cd $GITHUB_WORKSPACE
          composer require \
            php-stubs/wordpress-stubs:v${{ matrix.wordpress-version }} \
            php-stubs/woocommerce-stubs:v${{ matrix.woocommerce-version }} 

          composer install -n

          mkdir -p $WORDPRESS_DIR/wp-content/plugins
          ln -s $GITHUB_WORKSPACE/src/wc-easycredit $PLUGIN_DIR

          cd $WORDPRESS_DIR
          wp plugin activate wc-easycredit

          echo '{"enabled":"yes","display_settings":"","title":"","instructions":"","api_details":"","api_key":"2.de.7387.2","api_token":"T:8:dkLSap1GYX49Xl?KzqU%8XYk#vEg","api_signature":"VPApYscHbbo6hz5towOH2hi04rDroUaE","api_verify_credentials":"","debug":"yes","marketing_intro":"","marketing_components_express_checkout":"","express_checkout_detail_enabled":"yes","express_checkout_cart_enabled":"yes","marketing_components_widget":"","widget_enabled":"yes","widget_selector":".product .summary .price","cart_widget_enabled":"yes","cart_widget_selector":".wc-proceed-to-checkout","marketing_components_modal":"","modal_enabled":"no","modal_delay":"10","modal_snooze_for":"10","modal_src":"","marketing_components_card":"","card_enabled":"no","card_search_enabled":"no","card_position":"1","card_src":"","marketing_components_flashbox":"","flashbox_enabled":"no","flashbox_src":"","marketing_components_bar":"","bar_enabled":"no","transactions":"","mark_shipped":"no","mark_shipped_status":"wc-completed","mark_refunded":"no","mark_refunded_status":"wc-refunded","clickandcollect_intro":"","marketing_components_clickandcollect":"","clickandcollect_shipping_method":""}' | wp option set woocommerce_ratenkaufbyeasycredit_settings --format=json
      - name: Static Analyze
        if: false
        run: | 
          cd $PLUGIN_DIR
          php vendor/bin/phpstan analyze .
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('yarn.lock') }}
      - name: Install Dependencies
        run: |
          npm install --global yarn
          yarn install --frozen-lockfile
      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
      - name: Setup Playwright
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: yarn playwright install --with-deps chromium
      - name: Playwright E2E Tests
        run: |
          cd $WORDPRESS_DIR
          sudo php -S localhost:80 &

          cd $PLUGIN_DIR
          VERSION=${{ matrix.woocommerce-version }} yarn playwright test -c tests/
      - name: Save Logs for Debugging
        if: always()
        run: |
          cp -r $WORDPRESS_DIR/wp-content/debug.log $WORDPRESS_DIR/wp-content/uploads/wc-logs/*.log test-results/${{ matrix.woocommerce-version }}/ 
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: test-results/
          retention-days: 7

